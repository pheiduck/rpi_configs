#!/usr/bin/env sh

# Define Color
RED='\033[0;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Variables
bindir='/var/lib/airconnect/'
sysdir='/etc/systemd/system/'

# Check Privileges
if [ "$(id -u)" -ne 0 ]; then
  printf "${YELLOW}WARNING: ${NC}Please run with sudo privileges.\n"
  exit 1

# Check OS
elif [ "$(uname -s)" != "Linux" ]; then
  printf "${RED}ERROR: ${NC}You are trying to install this on an unsupported system.\n"
  printf "This installer is only supported by Linux distributions (w/ systemd).\n"
  exit 1

# Check if systemd is available
elif ! pidof systemd > /dev/null; then
  printf "${RED}ERROR: ${NC}systemd not found. This script requires systemd.\n"
  exit 1

# Check for curl version compatibility with --remove-on-error (7.83.0+)
elif curl --version | head -n 1 | awk '{print $2}' | awk -F. '{if ($1 > 7 || ($1 == 7 && $2 >= 83)) exit 0; else exit 1}'; then
  CURL_FLAGS="--remove-on-error"
else
  CURL_FLAGS=""
fi

# Check for curl version compatibility with --output-dir (7.73.0+)
if curl --version | head -n 1 | awk '{print $2}' | awk -F. '{if ($1 > 7 || ($1 == 7 && $2 >= 73)) exit 0; else exit 1}'; then
  USE_OUTPUT_DIR=true
else
  USE_OUTPUT_DIR=false
fi

# AirConnect Update or Install
if [ -d "${bindir}" ]; then
  printf "${GREEN}Updating AirConnect...${NC}\n"

  systemctl stop airupnp

  pushd "${bindir}"
  curl ${CURL_FLAGS} --compressed --progress-bar https://api.github.com/repos/philippe44/AirConnect/releases/latest | grep browser_download_url | cut -d '"' -f 4 | xargs curl ${CURL_FLAGS} --compressed --progress-bar -Lo airconnect.zip
  unzip -p airconnect.zip airupnp-linux-$(uname -m) > airupnp-linux
  rm airconnect.zip
  chmod 755 airupnp-linux
  popd

  systemctl daemon-reload
  systemctl start airupnp
  systemctl status airupnp

else
  printf "${GREEN}Installing AirConnect...${NC}\n"

  # Check if libssl1.1 is installed
  if [ $(dpkg-query -W -f='${Status}' libssl1.1 2>/dev/null | grep -q "unknown ok not-installed") ]; then
    apt-get install -y libssl1.1
  fi

  if [ "$USE_OUTPUT_DIR" = true ]; then
    # Use --output-dir if supported by curl version
    curl ${CURL_FLAGS} --compressed --progress-bar https://raw.githubusercontent.com/philippe44/AirConnect/c3dfcdb/bin/airupnp-linux-$(uname -m) --output-dir "${bindir}" --create-dirs -o airupnp-linux
    pushd "${bindir}"
    chmod 755 airupnp-linux
    popd
  else
    # For older curl versions, manually change directory to bindir
    mkdir -p "${bindir}"
    pushd "${bindir}"
    curl ${CURL_FLAGS} --compressed --progress-bar https://raw.githubusercontent.com/philippe44/AirConnect/c3dfcdb/bin/airupnp-linux-$(uname -m) -o airupnp-linux
    chmod 755 airupnp-linux
    popd
  fi

  pushd "${sysdir}"
  curl ${CURL_FLAGS} --compressed -LO https://raw.githubusercontent.com/pheiduck/rpi_configs/main/airconnect/airupnp.service
  popd

  systemctl daemon-reload
  systemctl enable --now airupnp
  systemctl status airupnp
fi
