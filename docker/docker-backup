#!/usr/bin/env sh

# Farben für die Ausgabe
YELLOW='\033[1;33m'
NC='\033[0m'

# Prüfe, ob das Skript als root ausgeführt wird
if [ $(whoami) != 'root' ]; then
  echo "${YELLOW}Please run with sudo privileges${NC}"
  exit 1
fi

# Backup-Konfiguration
export ZSTD_CLEVEL=6
export ZSTD_NBTHREADS=2
backupDate=$(date '+%d%m%y')

# Überprüfe den Festplattenspeicher
disk_usage=$(df / | grep / | awk '{ print $5 }' | sed 's/%//g')

if [ $disk_usage -ge 65 ]; then
  echo "${YELLOW}Festplattennutzung bei ${disk_usage}%. Alte Backups werden gelöscht...${NC}"
  # Lösche alte Backups (hier wird angenommen, dass die Backups im Format docker-backup-*.tar.zst vorliegen)
  find /home/pheiduck/docker-backup-*.tar.zst -mtime +30 -type f -delete
  echo "${YELLOW}Alte Backups gelöscht.${NC}"
fi

# Docker-Container stoppen
for dir in docker/*
do
    pushd ${dir}
    docker-compose down
    popd
done

sleep 15

# Backup erstellen
pushd /path/to/userhome
tar --create --zstd --file docker-backup-$backupDate.tar.zst --checkpoint=.100 docker
popd

sleep 15

# Docker-Container wieder starten
for dir in docker/*
do
    pushd ${dir}
    docker-compose up -d
    popd
done

echo "${YELLOW}Backup und Docker-Management abgeschlossen.${NC}"
